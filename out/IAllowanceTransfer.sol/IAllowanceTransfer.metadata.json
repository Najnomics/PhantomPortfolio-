{
  "compiler": {
    "version": "0.8.26+commit.8a97fa7a"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "deadline",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "AllowanceExpired"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "ExcessiveInvalidation"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "InsufficientAllowance"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "token",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "spender",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint160",
            "name": "amount",
            "type": "uint160",
            "indexed": false
          },
          {
            "internalType": "uint48",
            "name": "expiration",
            "type": "uint48",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "Approval",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "token",
            "type": "address",
            "indexed": false
          },
          {
            "internalType": "address",
            "name": "spender",
            "type": "address",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "Lockdown",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "token",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "spender",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint48",
            "name": "newNonce",
            "type": "uint48",
            "indexed": false
          },
          {
            "internalType": "uint48",
            "name": "oldNonce",
            "type": "uint48",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "NonceInvalidation",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "token",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "spender",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint160",
            "name": "amount",
            "type": "uint160",
            "indexed": false
          },
          {
            "internalType": "uint48",
            "name": "expiration",
            "type": "uint48",
            "indexed": false
          },
          {
            "internalType": "uint48",
            "name": "nonce",
            "type": "uint48",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "Permit",
        "anonymous": false
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "DOMAIN_SEPARATOR",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "token",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "allowance",
        "outputs": [
          {
            "internalType": "uint160",
            "name": "amount",
            "type": "uint160"
          },
          {
            "internalType": "uint48",
            "name": "expiration",
            "type": "uint48"
          },
          {
            "internalType": "uint48",
            "name": "nonce",
            "type": "uint48"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "token",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint160",
            "name": "amount",
            "type": "uint160"
          },
          {
            "internalType": "uint48",
            "name": "expiration",
            "type": "uint48"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "approve"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "token",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint48",
            "name": "newNonce",
            "type": "uint48"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "invalidateNonces"
      },
      {
        "inputs": [
          {
            "internalType": "struct IAllowanceTransfer.TokenSpenderPair[]",
            "name": "approvals",
            "type": "tuple[]",
            "components": [
              {
                "internalType": "address",
                "name": "token",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              }
            ]
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "lockdown"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "internalType": "struct IAllowanceTransfer.PermitBatch",
            "name": "permitBatch",
            "type": "tuple",
            "components": [
              {
                "internalType": "struct IAllowanceTransfer.PermitDetails[]",
                "name": "details",
                "type": "tuple[]",
                "components": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint160",
                    "name": "amount",
                    "type": "uint160"
                  },
                  {
                    "internalType": "uint48",
                    "name": "expiration",
                    "type": "uint48"
                  },
                  {
                    "internalType": "uint48",
                    "name": "nonce",
                    "type": "uint48"
                  }
                ]
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "sigDeadline",
                "type": "uint256"
              }
            ]
          },
          {
            "internalType": "bytes",
            "name": "signature",
            "type": "bytes"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "permit"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "internalType": "struct IAllowanceTransfer.PermitSingle",
            "name": "permitSingle",
            "type": "tuple",
            "components": [
              {
                "internalType": "struct IAllowanceTransfer.PermitDetails",
                "name": "details",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint160",
                    "name": "amount",
                    "type": "uint160"
                  },
                  {
                    "internalType": "uint48",
                    "name": "expiration",
                    "type": "uint48"
                  },
                  {
                    "internalType": "uint48",
                    "name": "nonce",
                    "type": "uint48"
                  }
                ]
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "sigDeadline",
                "type": "uint256"
              }
            ]
          },
          {
            "internalType": "bytes",
            "name": "signature",
            "type": "bytes"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "permit"
      },
      {
        "inputs": [
          {
            "internalType": "struct IAllowanceTransfer.AllowanceTransferDetails[]",
            "name": "transferDetails",
            "type": "tuple[]",
            "components": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint160",
                "name": "amount",
                "type": "uint160"
              },
              {
                "internalType": "address",
                "name": "token",
                "type": "address"
              }
            ]
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "transferFrom"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint160",
            "name": "amount",
            "type": "uint160"
          },
          {
            "internalType": "address",
            "name": "token",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "transferFrom"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "allowance(address,address,address)": {
          "details": "The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals."
        },
        "approve(address,address,uint160,uint48)": {
          "details": "The packed allowance also holds a nonce, which will stay unchanged in approveSetting amount to type(uint160).max sets an unlimited approval",
          "params": {
            "amount": "The approved amount of the token",
            "expiration": "The timestamp at which the approval is no longer valid",
            "spender": "The spender address to approve",
            "token": "The token to approve"
          }
        },
        "invalidateNonces(address,address,uint48)": {
          "details": "Can't invalidate more than 2**16 nonces per transaction.",
          "params": {
            "newNonce": "The new nonce to set. Invalidates all nonces less than it.",
            "spender": "The spender to invalidate nonces for",
            "token": "The token to invalidate nonces for"
          }
        },
        "lockdown((address,address)[])": {
          "params": {
            "approvals": "Array of approvals to revoke."
          }
        },
        "permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": {
          "details": "May fail if the owner's nonce was invalidated in-flight by invalidateNonce",
          "params": {
            "owner": "The owner of the tokens being approved",
            "permitSingle": "Data signed over by the owner specifying the terms of approval",
            "signature": "The owner's signature over the permit data"
          }
        },
        "permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": {
          "details": "May fail if the owner's nonce was invalidated in-flight by invalidateNonce",
          "params": {
            "owner": "The owner of the tokens being approved",
            "permitBatch": "Data signed over by the owner specifying the terms of approval",
            "signature": "The owner's signature over the permit data"
          }
        },
        "transferFrom((address,address,uint160,address)[])": {
          "details": "Requires the from addresses to have approved at least the desired amount of tokens to msg.sender.",
          "params": {
            "transferDetails": "Array of owners, recipients, amounts, and tokens for the transfers"
          }
        },
        "transferFrom(address,address,uint160,address)": {
          "details": "Requires the from address to have approved at least the desired amount of tokens to msg.sender.",
          "params": {
            "amount": "The amount of the token to transfer",
            "from": "The address to transfer from",
            "to": "The address of the recipient",
            "token": "The token address to transfer"
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "allowance(address,address,address)": {
          "notice": "A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]"
        },
        "approve(address,address,uint160,uint48)": {
          "notice": "Approves the spender to use up to amount of the specified token up until the expiration"
        },
        "invalidateNonces(address,address,uint48)": {
          "notice": "Invalidate nonces for a given (token, spender) pair"
        },
        "lockdown((address,address)[])": {
          "notice": "Enables performing a \"lockdown\" of the sender's Permit2 identity by batch revoking approvals"
        },
        "permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": {
          "notice": "Permit a spender to a given amount of the owners token via the owner's EIP-712 signature"
        },
        "permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": {
          "notice": "Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature"
        },
        "transferFrom((address,address,uint160,address)[])": {
          "notice": "Transfer approved tokens in a batch"
        },
        "transferFrom(address,address,uint160,address)": {
          "notice": "Transfer approved tokens from one address to another"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@fhenixprotocol/cofhe-contracts/=node_modules/@fhenixprotocol/cofhe-contracts/",
      "@fhenixprotocol/cofhe-mock-contracts/=node_modules/@fhenixprotocol/cofhe-mock-contracts/",
      "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
      "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
      "@uniswap/v4-core/=node_modules/@uniswap/v4-core/",
      "ds-test/=node_modules/@uniswap/v4-core/lib/solmate/lib/ds-test/",
      "erc4626-tests/=node_modules/@uniswap/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/",
      "forge-gas-snapshot/=node_modules/@uniswap/v4-periphery/lib/permit2/lib/forge-gas-snapshot/",
      "forge-std/=node_modules/forge-std/src/",
      "hardhat/=node_modules/hardhat/",
      "openzeppelin-contracts/=node_modules/@uniswap/v4-core/lib/openzeppelin-contracts/",
      "permit2/=node_modules/@uniswap/v4-periphery/lib/permit2/",
      "solmate/=node_modules/@uniswap/v4-core/lib/solmate/",
      "v4-core/=node_modules/@uniswap/v4-periphery/lib/v4-core/",
      "v4-periphery/=node_modules/@uniswap/v4-periphery/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "compilationTarget": {
      "node_modules/@uniswap/v4-periphery/lib/permit2/src/interfaces/IAllowanceTransfer.sol": "IAllowanceTransfer"
    },
    "evmVersion": "cancun",
    "libraries": {},
    "viaIR": true
  },
  "sources": {
    "node_modules/@uniswap/v4-periphery/lib/permit2/src/interfaces/IAllowanceTransfer.sol": {
      "keccak256": "0x37f0ac203b6ef605c9533e1a739477e8e9dcea90710b40e645a367f8a21ace29",
      "urls": [
        "bzz-raw://e0104d72aeaec1cd66cc232e7de7b7ead08608efcc179491b8a66387614670b0",
        "dweb:/ipfs/QmfAZDyuNC9FXXbnJUwqHNwmAK6uRrXxtWEytLsxjskPsN"
      ],
      "license": "MIT"
    },
    "node_modules/@uniswap/v4-periphery/lib/permit2/src/interfaces/IEIP712.sol": {
      "keccak256": "0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138",
      "urls": [
        "bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72",
        "dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}