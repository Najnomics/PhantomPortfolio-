{
  "compiler": {
    "version": "0.8.26+commit.8a97fa7a"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "portfolioId",
            "type": "uint256",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "tokenCount",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "PhantomPortfolioCreated",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "portfolioId",
            "type": "uint256",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "rebalanceType",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "PortfolioRebalanced",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "log",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "log_address",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256[]",
            "name": "val",
            "type": "uint256[]",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "log_array",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "int256[]",
            "name": "val",
            "type": "int256[]",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "log_array",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address[]",
            "name": "val",
            "type": "address[]",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "log_array",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "bytes",
            "name": "",
            "type": "bytes",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "log_bytes",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "log_bytes32",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "int256",
            "name": "",
            "type": "int256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "log_int",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "key",
            "type": "string",
            "indexed": false
          },
          {
            "internalType": "address",
            "name": "val",
            "type": "address",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "log_named_address",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "key",
            "type": "string",
            "indexed": false
          },
          {
            "internalType": "uint256[]",
            "name": "val",
            "type": "uint256[]",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "log_named_array",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "key",
            "type": "string",
            "indexed": false
          },
          {
            "internalType": "int256[]",
            "name": "val",
            "type": "int256[]",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "log_named_array",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "key",
            "type": "string",
            "indexed": false
          },
          {
            "internalType": "address[]",
            "name": "val",
            "type": "address[]",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "log_named_array",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "key",
            "type": "string",
            "indexed": false
          },
          {
            "internalType": "bytes",
            "name": "val",
            "type": "bytes",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "log_named_bytes",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "key",
            "type": "string",
            "indexed": false
          },
          {
            "internalType": "bytes32",
            "name": "val",
            "type": "bytes32",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "log_named_bytes32",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "key",
            "type": "string",
            "indexed": false
          },
          {
            "internalType": "int256",
            "name": "val",
            "type": "int256",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "decimals",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "log_named_decimal_int",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "key",
            "type": "string",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "val",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "decimals",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "log_named_decimal_uint",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "key",
            "type": "string",
            "indexed": false
          },
          {
            "internalType": "int256",
            "name": "val",
            "type": "int256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "log_named_int",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "key",
            "type": "string",
            "indexed": false
          },
          {
            "internalType": "string",
            "name": "val",
            "type": "string",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "log_named_string",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "key",
            "type": "string",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "val",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "log_named_uint",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "log_string",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "log_uint",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "bytes",
            "name": "",
            "type": "bytes",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "logs",
        "anonymous": false
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "ACL_ADDRESS",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "IS_TEST",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "TM_ADMIN",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "acl",
        "outputs": [
          {
            "internalType": "contract ACL",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "euint64",
            "name": "eValue",
            "type": "uint256"
          },
          {
            "internalType": "uint64",
            "name": "value",
            "type": "uint64"
          },
          {
            "internalType": "string",
            "name": "message",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "assertHashValue"
      },
      {
        "inputs": [
          {
            "internalType": "euint64",
            "name": "eValue",
            "type": "uint256"
          },
          {
            "internalType": "uint64",
            "name": "value",
            "type": "uint64"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "assertHashValue"
      },
      {
        "inputs": [
          {
            "internalType": "eaddress",
            "name": "eValue",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "value",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "assertHashValue"
      },
      {
        "inputs": [
          {
            "internalType": "euint16",
            "name": "eValue",
            "type": "uint256"
          },
          {
            "internalType": "uint16",
            "name": "value",
            "type": "uint16"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "assertHashValue"
      },
      {
        "inputs": [
          {
            "internalType": "euint128",
            "name": "eValue",
            "type": "uint256"
          },
          {
            "internalType": "uint128",
            "name": "value",
            "type": "uint128"
          },
          {
            "internalType": "string",
            "name": "message",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "assertHashValue"
      },
      {
        "inputs": [
          {
            "internalType": "euint128",
            "name": "eValue",
            "type": "uint256"
          },
          {
            "internalType": "uint128",
            "name": "value",
            "type": "uint128"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "assertHashValue"
      },
      {
        "inputs": [
          {
            "internalType": "ebool",
            "name": "eValue",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "value",
            "type": "bool"
          },
          {
            "internalType": "string",
            "name": "message",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "assertHashValue"
      },
      {
        "inputs": [
          {
            "internalType": "eaddress",
            "name": "eValue",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "value",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "message",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "assertHashValue"
      },
      {
        "inputs": [
          {
            "internalType": "euint16",
            "name": "eValue",
            "type": "uint256"
          },
          {
            "internalType": "uint16",
            "name": "value",
            "type": "uint16"
          },
          {
            "internalType": "string",
            "name": "message",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "assertHashValue"
      },
      {
        "inputs": [
          {
            "internalType": "euint8",
            "name": "eValue",
            "type": "uint256"
          },
          {
            "internalType": "uint8",
            "name": "value",
            "type": "uint8"
          },
          {
            "internalType": "string",
            "name": "message",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "assertHashValue"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "ctHash",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "message",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "assertHashValue"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "ctHash",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "assertHashValue"
      },
      {
        "inputs": [
          {
            "internalType": "euint32",
            "name": "eValue",
            "type": "uint256"
          },
          {
            "internalType": "uint32",
            "name": "value",
            "type": "uint32"
          },
          {
            "internalType": "string",
            "name": "message",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "assertHashValue"
      },
      {
        "inputs": [
          {
            "internalType": "euint32",
            "name": "eValue",
            "type": "uint256"
          },
          {
            "internalType": "uint32",
            "name": "value",
            "type": "uint32"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "assertHashValue"
      },
      {
        "inputs": [
          {
            "internalType": "ebool",
            "name": "eValue",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "value",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "assertHashValue"
      },
      {
        "inputs": [
          {
            "internalType": "euint8",
            "name": "eValue",
            "type": "uint256"
          },
          {
            "internalType": "uint8",
            "name": "value",
            "type": "uint8"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "assertHashValue"
      },
      {
        "inputs": [],
        "stateMutability": "pure",
        "type": "function",
        "name": "createBasePermission",
        "outputs": [
          {
            "internalType": "struct Permission",
            "name": "permission",
            "type": "tuple",
            "components": [
              {
                "internalType": "address",
                "name": "issuer",
                "type": "address"
              },
              {
                "internalType": "uint64",
                "name": "expiration",
                "type": "uint64"
              },
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "validatorId",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "validatorContract",
                "type": "address"
              },
              {
                "internalType": "bytes32",
                "name": "sealingKey",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "issuerSignature",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "recipientSignature",
                "type": "bytes"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "value",
            "type": "address"
          },
          {
            "internalType": "uint8",
            "name": "securityZone",
            "type": "uint8"
          },
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "createInEaddress",
        "outputs": [
          {
            "internalType": "struct InEaddress",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "uint256",
                "name": "ctHash",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "securityZone",
                "type": "uint8"
              },
              {
                "internalType": "uint8",
                "name": "utype",
                "type": "uint8"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "value",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "createInEaddress",
        "outputs": [
          {
            "internalType": "struct InEaddress",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "uint256",
                "name": "ctHash",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "securityZone",
                "type": "uint8"
              },
              {
                "internalType": "uint8",
                "name": "utype",
                "type": "uint8"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "bool",
            "name": "value",
            "type": "bool"
          },
          {
            "internalType": "uint8",
            "name": "securityZone",
            "type": "uint8"
          },
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "createInEbool",
        "outputs": [
          {
            "internalType": "struct InEbool",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "uint256",
                "name": "ctHash",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "securityZone",
                "type": "uint8"
              },
              {
                "internalType": "uint8",
                "name": "utype",
                "type": "uint8"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "bool",
            "name": "value",
            "type": "bool"
          },
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "createInEbool",
        "outputs": [
          {
            "internalType": "struct InEbool",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "uint256",
                "name": "ctHash",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "securityZone",
                "type": "uint8"
              },
              {
                "internalType": "uint8",
                "name": "utype",
                "type": "uint8"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint128",
            "name": "value",
            "type": "uint128"
          },
          {
            "internalType": "uint8",
            "name": "securityZone",
            "type": "uint8"
          },
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "createInEuint128",
        "outputs": [
          {
            "internalType": "struct InEuint128",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "uint256",
                "name": "ctHash",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "securityZone",
                "type": "uint8"
              },
              {
                "internalType": "uint8",
                "name": "utype",
                "type": "uint8"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint128",
            "name": "value",
            "type": "uint128"
          },
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "createInEuint128",
        "outputs": [
          {
            "internalType": "struct InEuint128",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "uint256",
                "name": "ctHash",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "securityZone",
                "type": "uint8"
              },
              {
                "internalType": "uint8",
                "name": "utype",
                "type": "uint8"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint16",
            "name": "value",
            "type": "uint16"
          },
          {
            "internalType": "uint8",
            "name": "securityZone",
            "type": "uint8"
          },
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "createInEuint16",
        "outputs": [
          {
            "internalType": "struct InEuint16",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "uint256",
                "name": "ctHash",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "securityZone",
                "type": "uint8"
              },
              {
                "internalType": "uint8",
                "name": "utype",
                "type": "uint8"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint16",
            "name": "value",
            "type": "uint16"
          },
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "createInEuint16",
        "outputs": [
          {
            "internalType": "struct InEuint16",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "uint256",
                "name": "ctHash",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "securityZone",
                "type": "uint8"
              },
              {
                "internalType": "uint8",
                "name": "utype",
                "type": "uint8"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "createInEuint256",
        "outputs": [
          {
            "internalType": "struct InEuint256",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "uint256",
                "name": "ctHash",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "securityZone",
                "type": "uint8"
              },
              {
                "internalType": "uint8",
                "name": "utype",
                "type": "uint8"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          },
          {
            "internalType": "uint8",
            "name": "securityZone",
            "type": "uint8"
          },
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "createInEuint256",
        "outputs": [
          {
            "internalType": "struct InEuint256",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "uint256",
                "name": "ctHash",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "securityZone",
                "type": "uint8"
              },
              {
                "internalType": "uint8",
                "name": "utype",
                "type": "uint8"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint32",
            "name": "value",
            "type": "uint32"
          },
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "createInEuint32",
        "outputs": [
          {
            "internalType": "struct InEuint32",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "uint256",
                "name": "ctHash",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "securityZone",
                "type": "uint8"
              },
              {
                "internalType": "uint8",
                "name": "utype",
                "type": "uint8"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint32",
            "name": "value",
            "type": "uint32"
          },
          {
            "internalType": "uint8",
            "name": "securityZone",
            "type": "uint8"
          },
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "createInEuint32",
        "outputs": [
          {
            "internalType": "struct InEuint32",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "uint256",
                "name": "ctHash",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "securityZone",
                "type": "uint8"
              },
              {
                "internalType": "uint8",
                "name": "utype",
                "type": "uint8"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint64",
            "name": "value",
            "type": "uint64"
          },
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "createInEuint64",
        "outputs": [
          {
            "internalType": "struct InEuint64",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "uint256",
                "name": "ctHash",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "securityZone",
                "type": "uint8"
              },
              {
                "internalType": "uint8",
                "name": "utype",
                "type": "uint8"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint64",
            "name": "value",
            "type": "uint64"
          },
          {
            "internalType": "uint8",
            "name": "securityZone",
            "type": "uint8"
          },
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "createInEuint64",
        "outputs": [
          {
            "internalType": "struct InEuint64",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "uint256",
                "name": "ctHash",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "securityZone",
                "type": "uint8"
              },
              {
                "internalType": "uint8",
                "name": "utype",
                "type": "uint8"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint8",
            "name": "value",
            "type": "uint8"
          },
          {
            "internalType": "uint8",
            "name": "securityZone",
            "type": "uint8"
          },
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "createInEuint8",
        "outputs": [
          {
            "internalType": "struct InEuint8",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "uint256",
                "name": "ctHash",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "securityZone",
                "type": "uint8"
              },
              {
                "internalType": "uint8",
                "name": "utype",
                "type": "uint8"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint8",
            "name": "value",
            "type": "uint8"
          },
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "createInEuint8",
        "outputs": [
          {
            "internalType": "struct InEuint8",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "uint256",
                "name": "ctHash",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "securityZone",
                "type": "uint8"
              },
              {
                "internalType": "uint8",
                "name": "utype",
                "type": "uint8"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "issuer",
            "type": "address"
          }
        ],
        "stateMutability": "pure",
        "type": "function",
        "name": "createPermissionSelf",
        "outputs": [
          {
            "internalType": "struct Permission",
            "name": "permission",
            "type": "tuple",
            "components": [
              {
                "internalType": "address",
                "name": "issuer",
                "type": "address"
              },
              {
                "internalType": "uint64",
                "name": "expiration",
                "type": "uint64"
              },
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "validatorId",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "validatorContract",
                "type": "address"
              },
              {
                "internalType": "bytes32",
                "name": "sealingKey",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "issuerSignature",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "recipientSignature",
                "type": "bytes"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "issuer",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          }
        ],
        "stateMutability": "pure",
        "type": "function",
        "name": "createPermissionShared",
        "outputs": [
          {
            "internalType": "struct Permission",
            "name": "permission",
            "type": "tuple",
            "components": [
              {
                "internalType": "address",
                "name": "issuer",
                "type": "address"
              },
              {
                "internalType": "uint64",
                "name": "expiration",
                "type": "uint64"
              },
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "validatorId",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "validatorContract",
                "type": "address"
              },
              {
                "internalType": "bytes32",
                "name": "sealingKey",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "issuerSignature",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "recipientSignature",
                "type": "bytes"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "seed",
            "type": "uint256"
          }
        ],
        "stateMutability": "pure",
        "type": "function",
        "name": "createSealingKey",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "excludeArtifacts",
        "outputs": [
          {
            "internalType": "string[]",
            "name": "excludedArtifacts_",
            "type": "string[]"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "excludeContracts",
        "outputs": [
          {
            "internalType": "address[]",
            "name": "excludedContracts_",
            "type": "address[]"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "excludeSelectors",
        "outputs": [
          {
            "internalType": "struct StdInvariant.FuzzSelector[]",
            "name": "excludedSelectors_",
            "type": "tuple[]",
            "components": [
              {
                "internalType": "address",
                "name": "addr",
                "type": "address"
              },
              {
                "internalType": "bytes4[]",
                "name": "selectors",
                "type": "bytes4[]"
              }
            ]
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "excludeSenders",
        "outputs": [
          {
            "internalType": "address[]",
            "name": "excludedSenders_",
            "type": "address[]"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "failed",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "ctHash",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "inMockStorage",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "ctHash",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "mockStorage",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "structHash",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "permissionHashTypedDataV4",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "ctHash",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "hostChainId",
            "type": "uint256"
          },
          {
            "internalType": "struct Permission",
            "name": "permission",
            "type": "tuple",
            "components": [
              {
                "internalType": "address",
                "name": "issuer",
                "type": "address"
              },
              {
                "internalType": "uint64",
                "name": "expiration",
                "type": "uint64"
              },
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "validatorId",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "validatorContract",
                "type": "address"
              },
              {
                "internalType": "bytes32",
                "name": "sealingKey",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "issuerSignature",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "recipientSignature",
                "type": "bytes"
              }
            ]
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "queryDecrypt",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          },
          {
            "internalType": "string",
            "name": "error",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "queryDecrypter",
        "outputs": [
          {
            "internalType": "contract MockQueryDecrypter",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "ctHash",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "hostChainId",
            "type": "uint256"
          },
          {
            "internalType": "struct Permission",
            "name": "permission",
            "type": "tuple",
            "components": [
              {
                "internalType": "address",
                "name": "issuer",
                "type": "address"
              },
              {
                "internalType": "uint64",
                "name": "expiration",
                "type": "uint64"
              },
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "validatorId",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "validatorContract",
                "type": "address"
              },
              {
                "internalType": "bytes32",
                "name": "sealingKey",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "issuerSignature",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "recipientSignature",
                "type": "bytes"
              }
            ]
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "querySealOutput",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          },
          {
            "internalType": "string",
            "name": "error",
            "type": "string"
          },
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setUp"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "structHash",
            "type": "bytes32"
          },
          {
            "internalType": "uint256",
            "name": "pkey",
            "type": "uint256"
          }
        ],
        "stateMutability": "pure",
        "type": "function",
        "name": "signPermission",
        "outputs": [
          {
            "internalType": "bytes",
            "name": "signature",
            "type": "bytes"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "struct Permission",
            "name": "permission",
            "type": "tuple",
            "components": [
              {
                "internalType": "address",
                "name": "issuer",
                "type": "address"
              },
              {
                "internalType": "uint64",
                "name": "expiration",
                "type": "uint64"
              },
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "validatorId",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "validatorContract",
                "type": "address"
              },
              {
                "internalType": "bytes32",
                "name": "sealingKey",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "issuerSignature",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "recipientSignature",
                "type": "bytes"
              }
            ]
          },
          {
            "internalType": "uint256",
            "name": "pkey",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "signPermissionRecipient",
        "outputs": [
          {
            "internalType": "struct Permission",
            "name": "signedPermission",
            "type": "tuple",
            "components": [
              {
                "internalType": "address",
                "name": "issuer",
                "type": "address"
              },
              {
                "internalType": "uint64",
                "name": "expiration",
                "type": "uint64"
              },
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "validatorId",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "validatorContract",
                "type": "address"
              },
              {
                "internalType": "bytes32",
                "name": "sealingKey",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "issuerSignature",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "recipientSignature",
                "type": "bytes"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "struct Permission",
            "name": "permission",
            "type": "tuple",
            "components": [
              {
                "internalType": "address",
                "name": "issuer",
                "type": "address"
              },
              {
                "internalType": "uint64",
                "name": "expiration",
                "type": "uint64"
              },
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "validatorId",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "validatorContract",
                "type": "address"
              },
              {
                "internalType": "bytes32",
                "name": "sealingKey",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "issuerSignature",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "recipientSignature",
                "type": "bytes"
              }
            ]
          },
          {
            "internalType": "uint256",
            "name": "pkey",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "signPermissionSelf",
        "outputs": [
          {
            "internalType": "struct Permission",
            "name": "signedPermission",
            "type": "tuple",
            "components": [
              {
                "internalType": "address",
                "name": "issuer",
                "type": "address"
              },
              {
                "internalType": "uint64",
                "name": "expiration",
                "type": "uint64"
              },
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "validatorId",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "validatorContract",
                "type": "address"
              },
              {
                "internalType": "bytes32",
                "name": "sealingKey",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "issuerSignature",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "recipientSignature",
                "type": "bytes"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "struct Permission",
            "name": "permission",
            "type": "tuple",
            "components": [
              {
                "internalType": "address",
                "name": "issuer",
                "type": "address"
              },
              {
                "internalType": "uint64",
                "name": "expiration",
                "type": "uint64"
              },
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "validatorId",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "validatorContract",
                "type": "address"
              },
              {
                "internalType": "bytes32",
                "name": "sealingKey",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "issuerSignature",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "recipientSignature",
                "type": "bytes"
              }
            ]
          },
          {
            "internalType": "uint256",
            "name": "pkey",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "signPermissionShared",
        "outputs": [
          {
            "internalType": "struct Permission",
            "name": "signedPermission",
            "type": "tuple",
            "components": [
              {
                "internalType": "address",
                "name": "issuer",
                "type": "address"
              },
              {
                "internalType": "uint64",
                "name": "expiration",
                "type": "uint64"
              },
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "validatorId",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "validatorContract",
                "type": "address"
              },
              {
                "internalType": "bytes32",
                "name": "sealingKey",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "issuerSignature",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "recipientSignature",
                "type": "bytes"
              }
            ]
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "targetArtifactSelectors",
        "outputs": [
          {
            "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
            "name": "targetedArtifactSelectors_",
            "type": "tuple[]",
            "components": [
              {
                "internalType": "string",
                "name": "artifact",
                "type": "string"
              },
              {
                "internalType": "bytes4[]",
                "name": "selectors",
                "type": "bytes4[]"
              }
            ]
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "targetArtifacts",
        "outputs": [
          {
            "internalType": "string[]",
            "name": "targetedArtifacts_",
            "type": "string[]"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "targetContracts",
        "outputs": [
          {
            "internalType": "address[]",
            "name": "targetedContracts_",
            "type": "address[]"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "targetInterfaces",
        "outputs": [
          {
            "internalType": "struct StdInvariant.FuzzInterface[]",
            "name": "targetedInterfaces_",
            "type": "tuple[]",
            "components": [
              {
                "internalType": "address",
                "name": "addr",
                "type": "address"
              },
              {
                "internalType": "string[]",
                "name": "artifacts",
                "type": "string[]"
              }
            ]
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "targetSelectors",
        "outputs": [
          {
            "internalType": "struct StdInvariant.FuzzSelector[]",
            "name": "targetedSelectors_",
            "type": "tuple[]",
            "components": [
              {
                "internalType": "address",
                "name": "addr",
                "type": "address"
              },
              {
                "internalType": "bytes4[]",
                "name": "selectors",
                "type": "bytes4[]"
              }
            ]
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "targetSenders",
        "outputs": [
          {
            "internalType": "address[]",
            "name": "targetedSenders_",
            "type": "address[]"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "taskManager",
        "outputs": [
          {
            "internalType": "contract TaskManager",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "test_CreateAndTriggerRebalance"
      },
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "test_MultiplePortfolioRebalancing"
      },
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "test_RebalanceAfterTimeElapsed"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "hashed",
            "type": "bytes32"
          },
          {
            "internalType": "bytes32",
            "name": "key",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "unseal",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "zkVerifier",
        "outputs": [
          {
            "internalType": "contract MockZkVerifier",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "zkVerifierSigner",
        "outputs": [
          {
            "internalType": "contract MockZkVerifierSigner",
            "name": "",
            "type": "address"
          }
        ]
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "assertHashValue(uint256,uint256)": {
          "params": {
            "ctHash": "Hash of the encrypted value.",
            "value": "Expected value."
          }
        },
        "createInEaddress(address,uint8,address)": {
          "params": {
            "securityZone": "Security zone of the encrypted value.",
            "value": "Value to encrypt."
          },
          "returns": {
            "_0": "InEaddress."
          }
        },
        "createInEbool(bool,uint8,address)": {
          "params": {
            "securityZone": "Security zone of the encrypted value.",
            "value": "Value to encrypt."
          },
          "returns": {
            "_0": "InEbool."
          }
        },
        "createInEuint128(uint128,uint8,address)": {
          "params": {
            "securityZone": "Security zone of the encrypted value.",
            "value": "Value to encrypt."
          },
          "returns": {
            "_0": "InEuint128."
          }
        },
        "createInEuint16(uint16,uint8,address)": {
          "params": {
            "securityZone": "Security zone of the encrypted value.",
            "value": "Value to encrypt."
          },
          "returns": {
            "_0": "InEuint16."
          }
        },
        "createInEuint256(uint256,uint8,address)": {
          "params": {
            "securityZone": "Security zone of the encrypted value.",
            "value": "Value to encrypt."
          },
          "returns": {
            "_0": "InEuint256."
          }
        },
        "createInEuint32(uint32,uint8,address)": {
          "params": {
            "securityZone": "Security zone of the encrypted value.",
            "value": "Value to encrypt."
          },
          "returns": {
            "_0": "InEuint32."
          }
        },
        "createInEuint64(uint64,uint8,address)": {
          "params": {
            "securityZone": "Security zone of the encrypted value.",
            "value": "Value to encrypt."
          },
          "returns": {
            "_0": "InEuint64."
          }
        },
        "createInEuint8(uint8,uint8,address)": {
          "params": {
            "securityZone": "Security zone of the encrypted value.",
            "value": "Value to encrypt."
          },
          "returns": {
            "_0": "InEuint8."
          }
        },
        "inMockStorage(uint256)": {
          "params": {
            "ctHash": "Hash of the encrypted value."
          },
          "returns": {
            "_0": "Whether the encrypted value is in the mocked task manager."
          }
        },
        "mockStorage(uint256)": {
          "params": {
            "ctHash": "Hash of the encrypted value."
          },
          "returns": {
            "_0": "Value of the encrypted value."
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "assertHashValue(uint256,uint256)": {
          "notice": "Asserts that the value of a given encrypted value is equal to the expected value."
        },
        "createInEaddress(address,uint8,address)": {
          "notice": "Creates an InEaddress to be used as FHE input. Value is stored in MockCoFHE contract, hash is a pointer to that value."
        },
        "createInEbool(bool,uint8,address)": {
          "notice": "Creates an InEbool to be used as FHE input. Value is stored in MockCoFHE contract, hash is a pointer to that value."
        },
        "createInEuint128(uint128,uint8,address)": {
          "notice": "Creates an InEuint128 to be used as FHE input. Value is stored in MockCoFHE contract, hash is a pointer to that value."
        },
        "createInEuint16(uint16,uint8,address)": {
          "notice": "Creates an InEuint16 to be used as FHE input. Value is stored in MockCoFHE contract, hash is a pointer to that value."
        },
        "createInEuint256(uint256,uint8,address)": {
          "notice": "Creates an InEuint256 to be used as FHE input. Value is stored in MockCoFHE contract, hash is a pointer to that value."
        },
        "createInEuint32(uint32,uint8,address)": {
          "notice": "Creates an InEuint32 to be used as FHE input. Value is stored in MockCoFHE contract, hash is a pointer to that value."
        },
        "createInEuint64(uint64,uint8,address)": {
          "notice": "Creates an InEuint64 to be used as FHE input. Value is stored in MockCoFHE contract, hash is a pointer to that value."
        },
        "createInEuint8(uint8,uint8,address)": {
          "notice": "Creates an InEuint8 to be used as FHE input. Value is stored in MockCoFHE contract, hash is a pointer to that value."
        },
        "inMockStorage(uint256)": {
          "notice": "Returns whether a given encrypted value is in the mocked task manager."
        },
        "mockStorage(uint256)": {
          "notice": "Returns the value of a given encrypted value from the mocked task manager."
        }
      },
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@fhenixprotocol/cofhe-contracts/=node_modules/@fhenixprotocol/cofhe-contracts/",
      "@fhenixprotocol/cofhe-mock-contracts/=node_modules/@fhenixprotocol/cofhe-mock-contracts/",
      "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
      "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
      "@uniswap/v4-core/=node_modules/@uniswap/v4-core/",
      "ds-test/=node_modules/@uniswap/v4-core/lib/solmate/lib/ds-test/",
      "erc4626-tests/=node_modules/@uniswap/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/",
      "forge-gas-snapshot/=node_modules/@uniswap/v4-periphery/lib/permit2/lib/forge-gas-snapshot/",
      "forge-std/=node_modules/forge-std/src/",
      "hardhat/=node_modules/hardhat/",
      "openzeppelin-contracts/=node_modules/@uniswap/v4-core/lib/openzeppelin-contracts/",
      "permit2/=node_modules/@uniswap/v4-periphery/lib/permit2/",
      "solmate/=node_modules/@uniswap/v4-core/lib/solmate/",
      "v4-core/=node_modules/@uniswap/v4-periphery/lib/v4-core/",
      "v4-periphery/=node_modules/@uniswap/v4-periphery/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "compilationTarget": {
      "test/coverage/PortfolioRebalancing.t.sol": "PortfolioRebalancingTest"
    },
    "evmVersion": "cancun",
    "libraries": {},
    "viaIR": true
  },
  "sources": {
    "node_modules/@fhenixprotocol/cofhe-contracts/FHE.sol": {
      "keccak256": "0x1ef83b66db01d3252557ae8b22553920966b864e9de79134039a80368eaae573",
      "urls": [
        "bzz-raw://5ceadf3ed2378689c9b806b87fa56ce2a8774ecf693678150bcd558fb71b5be7",
        "dweb:/ipfs/QmNeW41QYyYnCYephhamCkE1aem3HVTHxpao7JbA2ABTjs"
      ],
      "license": "BSD-3-Clause-Clear"
    },
    "node_modules/@fhenixprotocol/cofhe-contracts/ICofhe.sol": {
      "keccak256": "0x4f1bb532cd152e124638f5957ee43848d82a34df1c540c5dbf99ea72359e2db3",
      "urls": [
        "bzz-raw://260aa7d6c664aa4c5b7f6760de4de6c206a17a5fcde784c171459e9bd0850696",
        "dweb:/ipfs/QmQKqbPJvR4ced1SJGzCtgohEbzi7oRgHBqNDLLvxPVKvJ"
      ],
      "license": "UNLICENSED"
    },
    "node_modules/@fhenixprotocol/cofhe-mock-contracts/ACL.sol": {
      "keccak256": "0x02727fe4c3ce4b04f7d95e42f97da4476f49f5bf76986e8ab4b420ec5ab48729",
      "urls": [
        "bzz-raw://79763fdb12cd475881290d89968e606c7cb6fd40ca2e12b0afe9330cdf9f9794",
        "dweb:/ipfs/QmY8XLSQc1jyWNii81Tj34vdYcVpZjZU8Hqq5gBb2kqwzV"
      ],
      "license": "BSD-3-Clause-Clear"
    },
    "node_modules/@fhenixprotocol/cofhe-mock-contracts/CoFheTest.sol": {
      "keccak256": "0xad98130953955bac601fe51588d9ea757063a514fdf37eab2a92a98b52c5dff9",
      "urls": [
        "bzz-raw://f053657eadd448e35d4d2825e0eb6b141fab296f7e0a64635af32ed6e71c2572",
        "dweb:/ipfs/QmRaftN2yp71U11k6bCMTmxYrLQD42EFMNWyqgMRkYTgTg"
      ],
      "license": "UNLICENSED"
    },
    "node_modules/@fhenixprotocol/cofhe-mock-contracts/MockCoFHE.sol": {
      "keccak256": "0x798e237e39d3b7022baf5278a0388b04701e4e25a77a9463766fd8e04e3cd79a",
      "urls": [
        "bzz-raw://12be0d737153cd88843e2a19ecde96898da77d0377c08a5a95eb96bbfdbe6163",
        "dweb:/ipfs/QmThgcGSYWd3AFkXs2WdBTVZ9b67J2ze3LieLGaHUUeDBH"
      ],
      "license": "BSD-3-Clause-Clear"
    },
    "node_modules/@fhenixprotocol/cofhe-mock-contracts/MockQueryDecrypter.sol": {
      "keccak256": "0x1ae748462be9c69b25e9770de0cffca133f89b359127ed59d7e2c4046fc285bc",
      "urls": [
        "bzz-raw://1c98e2e11877bada9f1c4c902b872318fd6990bf14a4e33f1c46ac81bf294475",
        "dweb:/ipfs/QmVzNAeVQzHzyZduNvyYWyvPdsf8gkwj75ERA3enhjXuvD"
      ],
      "license": "BSD-3-Clause-Clear"
    },
    "node_modules/@fhenixprotocol/cofhe-mock-contracts/MockTaskManager.sol": {
      "keccak256": "0xe3e8a5c29c36b973406ea7086199997dc5f9f523c36cf654bdf3714f2b943ac8",
      "urls": [
        "bzz-raw://bb5da68be3a86c35d7435f34a6e3addf2b0f4644ab5fea747510ee961ff2740e",
        "dweb:/ipfs/QmXFKhDRsNKLFRC6wvuMx5B6DXrfqc5FoG8m6PVY4CTw1s"
      ],
      "license": "BSD-3-Clause-Clear"
    },
    "node_modules/@fhenixprotocol/cofhe-mock-contracts/MockZkVerifier.sol": {
      "keccak256": "0xfc9805a98eca3051611d594cec386b67257ccc048eb4980ab8b83af49feb57cb",
      "urls": [
        "bzz-raw://7428c48af3cd662a210caff6e946d5cc0ae1ac0fda8517cd7bc9e98d696b29cc",
        "dweb:/ipfs/QmbYpzhDo9KwGQyLZea8VkHp3VC6eq9WawcyHego3xGjW6"
      ],
      "license": "BSD-3-Clause-Clear"
    },
    "node_modules/@fhenixprotocol/cofhe-mock-contracts/MockZkVerifierSigner.sol": {
      "keccak256": "0xf8f56bdad9e64aa5360e3528313cfe399cbf7fed8c906ad88c8e0e58422422c9",
      "urls": [
        "bzz-raw://3e5a1f5dcdbe5c89b78362954c62b9097c36cee3f2c69237122e4c94ad7ad9e4",
        "dweb:/ipfs/QmPhjWNKtUoTf3Y7iPpeTKVj1jxrsGhrein1zqptTDUeTU"
      ],
      "license": "BSD-3-Clause-Clear"
    },
    "node_modules/@fhenixprotocol/cofhe-mock-contracts/Permissioned.sol": {
      "keccak256": "0x2a9dcdbe1373efc447b5a46b671a5b73becc8ae908e9a346f72142c2c73a5e2e",
      "urls": [
        "bzz-raw://8d711b39f2291a506e0bdbccb84479c5d8eccd0b121ff3219576bd263ec04641",
        "dweb:/ipfs/QmfJUnpLsahxdCV5pmGCBBp6CtGadwa8Jcvm75LrwQcP8s"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
      "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
      "urls": [
        "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
        "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/access/Ownable2Step.sol": {
      "keccak256": "0xdcad8898fda432696597752e8ec361b87d85c82cb258115427af006dacf7128c",
      "urls": [
        "bzz-raw://e2c9d517f0c136d54bd00cd57959d25681d4d6273f5bbbc263afe228303772f0",
        "dweb:/ipfs/QmReNFjXBiufByiAAzfSQ2SM5r3qeUErn46BmN3yVRvrek"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC1271.sol": {
      "keccak256": "0x66c7ec42c6c43712be2107a50ab4529379bc76a632b425babec698d9da921ac6",
      "urls": [
        "bzz-raw://dce2778f0b638adfc5ba29c2c618c855fe725fa74a16846386aa1d56a834aa04",
        "dweb:/ipfs/QmPV9oWnzQdi58od266j62xvviavLNHqKLZfm6k2K1qy9E"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC1363.sol": {
      "keccak256": "0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d",
      "urls": [
        "bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100",
        "dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol": {
      "keccak256": "0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc",
      "urls": [
        "bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037",
        "dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC20.sol": {
      "keccak256": "0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44",
      "urls": [
        "bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d",
        "dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC5267.sol": {
      "keccak256": "0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee",
      "urls": [
        "bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae",
        "dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC7913.sol": {
      "keccak256": "0xe5a126930df1d54e4a6dd5fea09010c4a7db0ea974c6c17a1e6082879f5a032b",
      "urls": [
        "bzz-raw://2f58f5a90328536a6c68289916bfa4ed653d871319c7b2a416ab3f6263c4f2f5",
        "dweb:/ipfs/Qmaa9DmgUA16Urz5fuF4RbFz2NaVpNLV41ddwykSdasFUd"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
      "keccak256": "0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e",
      "urls": [
        "bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23",
        "dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
      "keccak256": "0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994",
      "urls": [
        "bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c",
        "dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
      "keccak256": "0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2",
      "urls": [
        "bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303",
        "dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
      "keccak256": "0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f",
      "urls": [
        "bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e",
        "dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
      "keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
      "urls": [
        "bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
        "dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/Bytes.sol": {
      "keccak256": "0x1613f93e376ab96791fd29f79da754e253c3d766831bc8c42f50545662f49065",
      "urls": [
        "bzz-raw://e88ee314d50d0f323616f88d0ccf5e4110dbdec2775d8d42523bcc8b76ed36eb",
        "dweb:/ipfs/QmQ18ygHRrDdz4AEZXy5PASUHvJk1SNWWKM3TyC1xvDedP"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/Context.sol": {
      "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
      "urls": [
        "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
        "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/Panic.sol": {
      "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
      "urls": [
        "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
        "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/ReentrancyGuardTransient.sol": {
      "keccak256": "0xe56ff5015046505f81f9d62671a784e933dd099db4c3a8fa8de598f20af2c5a3",
      "urls": [
        "bzz-raw://355863359b4a250f7016836ef9a9672578e898503896f70a0d42b80141586f3e",
        "dweb:/ipfs/QmXXzvoMSFNQf8nRbcyRap5qzcbekWuzbXDY5C8f68JiG3"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol": {
      "keccak256": "0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402",
      "urls": [
        "bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35",
        "dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
      "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
      "urls": [
        "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
        "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
      "keccak256": "0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4",
      "urls": [
        "bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e",
        "dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/TransientSlot.sol": {
      "keccak256": "0xac673fa1e374d9e6107504af363333e3e5f6344d2e83faf57d9bfd41d77cc946",
      "urls": [
        "bzz-raw://5982478dbbb218e9dd5a6e83f5c0e8d1654ddf20178484b43ef21dd2246809de",
        "dweb:/ipfs/QmaB1hS68n2kG8vTbt7EPEzmrGhkUbfiFyykGGLsAr9X22"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
      "keccak256": "0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84",
      "urls": [
        "bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9",
        "dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
      "keccak256": "0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5",
      "urls": [
        "bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746",
        "dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
      "keccak256": "0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631",
      "urls": [
        "bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59",
        "dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol": {
      "keccak256": "0x0f39d23ae345355f0913470b15d00c0434754302077ac97cdc038b5c000fc5cc",
      "urls": [
        "bzz-raw://d5ebc3233ff506c43e0f9960d2459403f878bbb63b7c71c318f16839564919ac",
        "dweb:/ipfs/QmbctngFd6aQkHVqZeFAL3iHfw4X7wNgfsgUxX8t26U2m4"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
      "keccak256": "0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c",
      "urls": [
        "bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617",
        "dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
      "keccak256": "0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6",
      "urls": [
        "bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3",
        "dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
      "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
      "urls": [
        "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
        "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
      "keccak256": "0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3",
      "urls": [
        "bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03",
        "dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"
      ],
      "license": "MIT"
    },
    "node_modules/@uniswap/v4-core/src/interfaces/IExtsload.sol": {
      "keccak256": "0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43",
      "urls": [
        "bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1",
        "dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN"
      ],
      "license": "MIT"
    },
    "node_modules/@uniswap/v4-core/src/interfaces/IExttload.sol": {
      "keccak256": "0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937",
      "urls": [
        "bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8",
        "dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY"
      ],
      "license": "MIT"
    },
    "node_modules/@uniswap/v4-core/src/interfaces/IHooks.sol": {
      "keccak256": "0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d",
      "urls": [
        "bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec",
        "dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G"
      ],
      "license": "MIT"
    },
    "node_modules/@uniswap/v4-core/src/interfaces/IPoolManager.sol": {
      "keccak256": "0xbdab3544da3d32dfdf7457baa94e17d5a3012952428559e013ffac45d067038e",
      "urls": [
        "bzz-raw://ce95ff864468e37c76adf71df061d4f3d6f3a5ec1f9bc3aea090463bc72798f4",
        "dweb:/ipfs/QmSbWh1pLbz51yQF4HEu5NRhr8XVv9JYGEw1hq1HudAnCi"
      ],
      "license": "MIT"
    },
    "node_modules/@uniswap/v4-core/src/interfaces/IProtocolFees.sol": {
      "keccak256": "0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848",
      "urls": [
        "bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d",
        "dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J"
      ],
      "license": "MIT"
    },
    "node_modules/@uniswap/v4-core/src/interfaces/external/IERC20Minimal.sol": {
      "keccak256": "0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f",
      "urls": [
        "bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de",
        "dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d"
      ],
      "license": "MIT"
    },
    "node_modules/@uniswap/v4-core/src/interfaces/external/IERC6909Claims.sol": {
      "keccak256": "0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48",
      "urls": [
        "bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f",
        "dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK"
      ],
      "license": "MIT"
    },
    "node_modules/@uniswap/v4-core/src/libraries/CustomRevert.sol": {
      "keccak256": "0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de",
      "urls": [
        "bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd",
        "dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt"
      ],
      "license": "MIT"
    },
    "node_modules/@uniswap/v4-core/src/libraries/Hooks.sol": {
      "keccak256": "0xd679b4b2d429689bc44f136050ebc958fb2d7d0d3a3c7b3e48c08ab4fba09aaa",
      "urls": [
        "bzz-raw://287190cb72840e5eb63cc7a8a1d0b9150af17d8e4ea0323f47c7e7928f2033cb",
        "dweb:/ipfs/QmVfqWBnAQM2jUcuREDdvjcP21gNuLU35CoL3NG5CEhNcx"
      ],
      "license": "MIT"
    },
    "node_modules/@uniswap/v4-core/src/libraries/LPFeeLibrary.sol": {
      "keccak256": "0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b",
      "urls": [
        "bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475",
        "dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J"
      ],
      "license": "MIT"
    },
    "node_modules/@uniswap/v4-core/src/libraries/ParseBytes.sol": {
      "keccak256": "0x7533b13f53ee2c2c55500100b22ffd6e37e7523c27874edc98663d53a8672b15",
      "urls": [
        "bzz-raw://82449058634fde28a085f3c59a6a5f412550c02181590593fd84c3e8b329aa17",
        "dweb:/ipfs/Qmev4E9Au6SsE4wsArChCwfg94KhHc5gYsEsZUnjF5sRLa"
      ],
      "license": "MIT"
    },
    "node_modules/@uniswap/v4-core/src/libraries/SafeCast.sol": {
      "keccak256": "0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86",
      "urls": [
        "bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59",
        "dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj"
      ],
      "license": "MIT"
    },
    "node_modules/@uniswap/v4-core/src/types/BalanceDelta.sol": {
      "keccak256": "0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f",
      "urls": [
        "bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9",
        "dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H"
      ],
      "license": "MIT"
    },
    "node_modules/@uniswap/v4-core/src/types/BeforeSwapDelta.sol": {
      "keccak256": "0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78",
      "urls": [
        "bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782",
        "dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K"
      ],
      "license": "MIT"
    },
    "node_modules/@uniswap/v4-core/src/types/Currency.sol": {
      "keccak256": "0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93",
      "urls": [
        "bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01",
        "dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5"
      ],
      "license": "MIT"
    },
    "node_modules/@uniswap/v4-core/src/types/PoolId.sol": {
      "keccak256": "0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af",
      "urls": [
        "bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918",
        "dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y"
      ],
      "license": "MIT"
    },
    "node_modules/@uniswap/v4-core/src/types/PoolKey.sol": {
      "keccak256": "0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786",
      "urls": [
        "bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639",
        "dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi"
      ],
      "license": "MIT"
    },
    "node_modules/@uniswap/v4-core/src/types/PoolOperation.sol": {
      "keccak256": "0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162",
      "urls": [
        "bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07",
        "dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c"
      ],
      "license": "MIT"
    },
    "node_modules/@uniswap/v4-periphery/src/base/ImmutableState.sol": {
      "keccak256": "0x1867c9fa2f9b4fa73bab0fcdc9d19ccef4eeac552273d8b84a170cd1cc90350a",
      "urls": [
        "bzz-raw://af2d699b439e13b599632fddfe82718aebd41055fba7c075f186675c588d1337",
        "dweb:/ipfs/Qmc111gckSKb9aESn3wRFLeLiS4KGujaUcaYJgRnCRfwQU"
      ],
      "license": "MIT"
    },
    "node_modules/@uniswap/v4-periphery/src/interfaces/IImmutableState.sol": {
      "keccak256": "0x36ab3100e87457ecf04887f4f540e34fd7f21d8e3b83880cb679239e60b7b06b",
      "urls": [
        "bzz-raw://7f290c7ce8e4832608d637a51b13dff95abecf6549485448e647a11c8ed01341",
        "dweb:/ipfs/QmfD1R6mTp8j4EjQXmQZW3vCh11EYFjnvoaw8rXRP27mMq"
      ],
      "license": "MIT"
    },
    "node_modules/@uniswap/v4-periphery/src/utils/BaseHook.sol": {
      "keccak256": "0x6268607345149d912996d1c2bac693b2102304cc97c19ec4fef184d6fa390e89",
      "urls": [
        "bzz-raw://d6c0dddffa6c5eb3c10bc45d56d58bc3f4773778322fa10a4acf46e2292b61b3",
        "dweb:/ipfs/Qmc1Srhh6ne5Lsi2Y5BBz8pgPLmJdg8uN1UCeJzKnr6Kra"
      ],
      "license": "MIT"
    },
    "node_modules/forge-std/src/Base.sol": {
      "keccak256": "0xa3735a6618a3014e42bb4329ad143e3b2c59cd95094350202e4c4a06c9d585dd",
      "urls": [
        "bzz-raw://eef9db48d94726ec3d3fa3a84a8d520903705190f7ee7a04a065335a6aeeac4d",
        "dweb:/ipfs/QmSWmNny7TkzyqRPjGdpERAJuBwwznrGPLUqS4DZy5fX5z"
      ],
      "license": "MIT"
    },
    "node_modules/forge-std/src/StdAssertions.sol": {
      "keccak256": "0xd8eec16034b53b52c90a3d720e121ce7d30d64cc57d854db7d817d5b382dda43",
      "urls": [
        "bzz-raw://612780755e32668c7e3b747d94d16c7291101144e084dd9ee563f071711e99e3",
        "dweb:/ipfs/QmQgtFJXEmDtSHT7tZQTMbb6PCDpq5UDYFvrBnWk1Xo2SY"
      ],
      "license": "MIT"
    },
    "node_modules/forge-std/src/StdChains.sol": {
      "keccak256": "0xd3edaf57db178f839d97ccee0009c2b7b20f78c2adca9028a6013acb8d5b4c5e",
      "urls": [
        "bzz-raw://0f17329ac1d25d3e6657ca240dee0a3f9b2cf22a64a05b87dac15252dee74351",
        "dweb:/ipfs/QmPHxkEwgVpQNbU52s58RmmegrkYGj8bNKTVSW8rZm3dBm"
      ],
      "license": "MIT"
    },
    "node_modules/forge-std/src/StdCheats.sol": {
      "keccak256": "0x0fa6ec03602648b62cce41aab2096e6b7e052f2846075d967b6958dd586db746",
      "urls": [
        "bzz-raw://cd84e2ca9c1eaed6b76768cc12bb8c1af8289170ea8b7706f58d516460d79c41",
        "dweb:/ipfs/QmQ7BK7co6DE4eWUqMyv11s5eHYkS1tyx8tDSZGZVtf2aK"
      ],
      "license": "MIT"
    },
    "node_modules/forge-std/src/StdConstants.sol": {
      "keccak256": "0x319ccdabfa2c0b2428301445873270ffea20f0e039d4fd5e6eeba65158e4e534",
      "urls": [
        "bzz-raw://b633f9d3a719e1d035ce7daa6cc051ddf89a72d34200d14cec37728e245cdabc",
        "dweb:/ipfs/QmRP7HQJpHMx1CsFrY8tXVVx1DQmi2dcb2BoGfiWaA923r"
      ],
      "license": "MIT"
    },
    "node_modules/forge-std/src/StdError.sol": {
      "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
      "urls": [
        "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
        "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
      ],
      "license": "MIT"
    },
    "node_modules/forge-std/src/StdInvariant.sol": {
      "keccak256": "0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d",
      "urls": [
        "bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391",
        "dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5"
      ],
      "license": "MIT"
    },
    "node_modules/forge-std/src/StdJson.sol": {
      "keccak256": "0xbc0132abe1c2accc2867c0f03667afffdf92f3e95a581bb03c9557eaa38ea500",
      "urls": [
        "bzz-raw://eb6fab37dc73c219cfbb7b4f4998bcf7677ca5397a867e850f40232192073974",
        "dweb:/ipfs/QmUHsbVdp9SKmgek7ZfPcLTKrpZFXpqaqt4sVejzxGEQL3"
      ],
      "license": "MIT"
    },
    "node_modules/forge-std/src/StdMath.sol": {
      "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
      "urls": [
        "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
        "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
      ],
      "license": "MIT"
    },
    "node_modules/forge-std/src/StdStorage.sol": {
      "keccak256": "0x04102de0a79398e4bdea57b7a4818655b4cc66d6f81d1cff08bf428cd0b384cd",
      "urls": [
        "bzz-raw://53edc6c8f7f67cafc0129f039637c77d979880f7f1947defea31e8f0c05095bc",
        "dweb:/ipfs/QmUKXJd1vFCkxxrkXNLURdXrx2apoyWQFrFb5UqNkjdHVi"
      ],
      "license": "MIT"
    },
    "node_modules/forge-std/src/StdStyle.sol": {
      "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
      "urls": [
        "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
        "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
      ],
      "license": "MIT"
    },
    "node_modules/forge-std/src/StdToml.sol": {
      "keccak256": "0x58a72c765ed3f7ff6b105509689658795b8a3739b8931772a497155878381861",
      "urls": [
        "bzz-raw://b4a3746f4fabaeb980bd77d9e091d3904ee38a6c0e191bfa8ba6874c6f8558a3",
        "dweb:/ipfs/QmUfFDMEn461FgGEXt5HicyGD54sc28sLaQ9JRWDMBKed8"
      ],
      "license": "MIT"
    },
    "node_modules/forge-std/src/StdUtils.sol": {
      "keccak256": "0xb2469a902a326074034c4f7081d868113db0edbb7cf48b86528af2d6b07295f8",
      "urls": [
        "bzz-raw://1430a81c4978be875e2a3b31a8bfa4e1438fecd327f23771b690d64db63c020a",
        "dweb:/ipfs/QmW6aB2u1LNaRgGQFwjV7L7UbxsRg63iJ7AuujPouEa4cT"
      ],
      "license": "MIT"
    },
    "node_modules/forge-std/src/Test.sol": {
      "keccak256": "0x3dda6083a83dfa3e8526e97bcc28e862ee2442dd58fe94d5c426d65b8e38f73c",
      "urls": [
        "bzz-raw://33f8c02e4dabdab86a6825125856446a8657eacd712318b51b7818e4a6f6e3f4",
        "dweb:/ipfs/QmRKSjVnrk54yr8wTK2e6QxRjiuba2H8HJSKunHAkdo7RG"
      ],
      "license": "MIT"
    },
    "node_modules/forge-std/src/Vm.sol": {
      "keccak256": "0x20163fcc9d22581bb8909966c611bd29d482445eb415227407f0ff7ff1b034ab",
      "urls": [
        "bzz-raw://b0ac641e4ae6cd79073d514187eb9089dda9490394f0212523ff6136d818f602",
        "dweb:/ipfs/QmaDjxAK5dctUyFDndGDvteSyVrxwBx3FFefzvQb2Mz8ZR"
      ],
      "license": "MIT OR Apache-2.0"
    },
    "node_modules/forge-std/src/console.sol": {
      "keccak256": "0x4bbf47eb762cef93729d6ef15e78789957147039b113e5d4df48e3d3fd16d0f5",
      "urls": [
        "bzz-raw://af9e3a7c3d82fb5b10b57ca4d1a82f2acbef80c077f6f6ef0cc0187c7bfd9f57",
        "dweb:/ipfs/QmR9VzmnBDJpgiDP6CHT6truehukF9HpYvuP6kRiJbDwPP"
      ],
      "license": "MIT"
    },
    "node_modules/forge-std/src/console2.sol": {
      "keccak256": "0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f",
      "urls": [
        "bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d",
        "dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ"
      ],
      "license": "MIT"
    },
    "node_modules/forge-std/src/interfaces/IMulticall3.sol": {
      "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
      "urls": [
        "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
        "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
      ],
      "license": "MIT"
    },
    "node_modules/forge-std/src/safeconsole.sol": {
      "keccak256": "0xbef9786cb49d3eade757bad87568c49c8c8f35721f0193c95ffb055d9e466e11",
      "urls": [
        "bzz-raw://3bafd2b0b2d28068d329f95ea8a1fbce3719c257fcb863fc01abcbafd8d531ab",
        "dweb:/ipfs/QmUeaFjKWTVDBsHVfSob4mwt6A5hTnKDz22HaUXeZhypa3"
      ],
      "license": "MIT"
    },
    "node_modules/hardhat/console.sol": {
      "keccak256": "0xf2560b5386574153057104d19a9e68a32ee912cf23c0c8df1fe9a0607f42d543",
      "urls": [
        "bzz-raw://a63166e036b040826baa513772451a79925daa304b38749100efb089ac07cdc2",
        "dweb:/ipfs/QmUtMTxUFKU6a5oFXsEJnTPvb3QPb7GDDmSv5yZ1jFHDwR"
      ],
      "license": "MIT"
    },
    "src/PhantomPortfolio.sol": {
      "keccak256": "0xdb18b0b59bd94ea25cfa5ee4bf8d58728181bfce79bcf1b6d01c06c0657ae4e4",
      "urls": [
        "bzz-raw://1381355ed3d5b8f5edfd726e6a768a7ef82678a87723b2791610a2c1f5a5d765",
        "dweb:/ipfs/QmUJyZsm4QTZyrQQMVyfZsjDFgocxAxvnWD4qaLV5asia7"
      ],
      "license": "MIT"
    },
    "src/lib/PortfolioFHEPermissions.sol": {
      "keccak256": "0xf584eec1a7d6486fcc0ff9d779554c50d9db39ae478d80d3fd08982040042634",
      "urls": [
        "bzz-raw://7a416bc19c9c8cef1692e4057d78d019f7b0690c95b8dc2709f1d5cb55923446",
        "dweb:/ipfs/QmViVmfMc9y3UY1qAatU3kRY9D3bn2TRjD5e1JMRWqL7GF"
      ],
      "license": "MIT"
    },
    "src/lib/PortfolioLibrary.sol": {
      "keccak256": "0x325fe003350f7cf9397316d96f373bd4ee9dbfeb5790ebed84fae620ad7812d2",
      "urls": [
        "bzz-raw://f9ebee935c4f16e9364c43c8d35542cf61647774738d6d112e4fe17add2c42ce",
        "dweb:/ipfs/QmSLmEXk3zGR5gzZTAJtKYRXY2uKZity8vKmEuu11nE9Hg"
      ],
      "license": "MIT"
    },
    "test/coverage/PortfolioRebalancing.t.sol": {
      "keccak256": "0xfcc34f53ec094263ce3da1d06baaab8e277daa52f44b57d326c35dc9d21c2a89",
      "urls": [
        "bzz-raw://66a7100da32e2052780279fc52a9aef21499aa25a40b3f63e17b01ec8630e3e9",
        "dweb:/ipfs/QmfZv58gCYmTf2DuyhtyZUw4UGRkXDm1LGWNaJak3PLDp5"
      ],
      "license": "MIT"
    },
    "test/utils/PortfolioToken.sol": {
      "keccak256": "0xfc21cf9ad7ca5fc95360c955149183568266c361e5a890d2c67d6ae160de4d70",
      "urls": [
        "bzz-raw://abf16c583818cefcf1ae78af7afd62c3953603950463319e2665217de62a527c",
        "dweb:/ipfs/QmPPcCeXo2cY2Syztukzejt9mfEyp4RfejHxNPwqyPu6Xk"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}