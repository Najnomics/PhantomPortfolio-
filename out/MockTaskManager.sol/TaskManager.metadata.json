{
  "compiler": {
    "version": "0.8.26+commit.8a97fa7a"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "handle",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "ACLNotAllowed"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "ctHash",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "DecryptionResultNotReady"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "ECDSAInvalidSignature"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "length",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "ECDSAInvalidSignatureLength"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "s",
            "type": "bytes32"
          }
        ],
        "type": "error",
        "name": "ECDSAInvalidSignatureS"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "ctHash",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "InputNotInMockStorage"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "InvalidAddress"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "functionName",
            "type": "string"
          },
          {
            "internalType": "uint8",
            "name": "inputType",
            "type": "uint8"
          }
        ],
        "type": "error",
        "name": "InvalidInputForFunction"
      },
      {
        "inputs": [
          {
            "internalType": "uint8",
            "name": "actual",
            "type": "uint8"
          },
          {
            "internalType": "uint8",
            "name": "expected",
            "type": "uint8"
          }
        ],
        "type": "error",
        "name": "InvalidInputType"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "operation",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "got",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "expected",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "InvalidInputsAmount"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "operation",
            "type": "string"
          }
        ],
        "type": "error",
        "name": "InvalidOperationInputs"
      },
      {
        "inputs": [
          {
            "internalType": "int32",
            "name": "zone",
            "type": "int32"
          },
          {
            "internalType": "int32",
            "name": "min",
            "type": "int32"
          },
          {
            "internalType": "int32",
            "name": "max",
            "type": "int32"
          }
        ],
        "type": "error",
        "name": "InvalidSecurityZone"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "InvalidSignature"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "signer",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "expectedSigner",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "InvalidSigner"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "operation",
            "type": "string"
          }
        ],
        "type": "error",
        "name": "InvalidThreeInputOperation"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "operation",
            "type": "string"
          }
        ],
        "type": "error",
        "name": "InvalidTwoInputOperation"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "operation",
            "type": "string"
          }
        ],
        "type": "error",
        "name": "InvalidTypeOrSecurityZone"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "operation",
            "type": "string"
          }
        ],
        "type": "error",
        "name": "InvalidUnaryOperation"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "OnlyAggregatorAllowed"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "OnlyOwnerAllowed"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "RandomFunctionNotSupported"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "length",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "StringsInsufficientHexLength"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "operation",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "got",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "maxAllowed",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "TooManyInputs"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "ctHash",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "result",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "address",
            "name": "requestor",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "DecryptionResult",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "ctHash",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "string",
            "name": "operation",
            "type": "string",
            "indexed": false
          },
          {
            "internalType": "string",
            "name": "errorMessage",
            "type": "string",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "ProtocolNotification",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "ctHash",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "string",
            "name": "operation",
            "type": "string",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "input1",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "input2",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "input3",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "TaskCreated",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "operation",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "ctHash",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "MOCK_logAllow"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "ctHash",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "MOCK_setInEuintKey"
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "acl",
        "outputs": [
          {
            "internalType": "contract ACL",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "aggregator",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "ctHash",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "allow"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "ctHash",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "allowForDecryption"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "ctHash",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "allowGlobal"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "ctHash",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "allowTransient"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "ctHash",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "createDecryptTask"
      },
      {
        "inputs": [
          {
            "internalType": "uint8",
            "name": "returnType",
            "type": "uint8"
          },
          {
            "internalType": "enum FunctionId",
            "name": "funcId",
            "type": "uint8"
          },
          {
            "internalType": "uint256[]",
            "name": "encryptedHashes",
            "type": "uint256[]"
          },
          {
            "internalType": "uint256[]",
            "name": "extraInputs",
            "type": "uint256[]"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "createTask",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "pure",
        "type": "function",
        "name": "exists",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "ctHash",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getDecryptResult",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "ctHash",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getDecryptResultSafe",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "result",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "decrypted",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "ctHash",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "result",
            "type": "uint256"
          },
          {
            "internalType": "address[]",
            "name": "",
            "type": "address[]"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "handleDecryptResult"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "ctHash",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "operation",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "errorMessage",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "handleError"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "inMockStorage",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "initialOwner",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "initialize"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "ctHash",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "isAllowed",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "struct Permission",
            "name": "permission",
            "type": "tuple",
            "components": [
              {
                "internalType": "address",
                "name": "issuer",
                "type": "address"
              },
              {
                "internalType": "uint64",
                "name": "expiration",
                "type": "uint64"
              },
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "validatorId",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "validatorContract",
                "type": "address"
              },
              {
                "internalType": "bytes32",
                "name": "sealingKey",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "issuerSignature",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "recipientSignature",
                "type": "bytes"
              }
            ]
          },
          {
            "internalType": "uint256",
            "name": "handle",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "isAllowedWithPermission",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "isInitialized",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "logOps",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "mockStorage",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "str",
            "type": "string"
          }
        ],
        "stateMutability": "pure",
        "type": "function",
        "name": "removeFirstLetter",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_aclAddress",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setACLContract"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_aggregatorAddress",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setAggregator"
      },
      {
        "inputs": [
          {
            "internalType": "bool",
            "name": "_logOps",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setLogOps"
      },
      {
        "inputs": [
          {
            "internalType": "int32",
            "name": "securityZone",
            "type": "int32"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setSecurityZoneMax"
      },
      {
        "inputs": [
          {
            "internalType": "int32",
            "name": "securityZone",
            "type": "int32"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setSecurityZoneMin"
      },
      {
        "inputs": [
          {
            "internalType": "int32",
            "name": "minSZ",
            "type": "int32"
          },
          {
            "internalType": "int32",
            "name": "maxSZ",
            "type": "int32"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setSecurityZones"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "signer",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setVerifierSigner"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "str",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "start",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "length",
            "type": "uint256"
          }
        ],
        "stateMutability": "pure",
        "type": "function",
        "name": "sliceString",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "struct EncryptedInput",
            "name": "input",
            "type": "tuple",
            "components": [
              {
                "internalType": "uint256",
                "name": "ctHash",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "securityZone",
                "type": "uint8"
              },
              {
                "internalType": "uint8",
                "name": "utype",
                "type": "uint8"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              }
            ]
          },
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "verifyInput",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "constructor": {
          "custom:oz-upgrades-unsafe-allow": "constructor"
        },
        "initialize(address)": {
          "params": {
            "initialOwner": "Initial owner address."
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "initialize(address)": {
          "notice": "Initializes the contract."
        }
      },
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@fhenixprotocol/cofhe-contracts/=node_modules/@fhenixprotocol/cofhe-contracts/",
      "@fhenixprotocol/cofhe-mock-contracts/=node_modules/@fhenixprotocol/cofhe-mock-contracts/",
      "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
      "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
      "@uniswap/v4-core/=node_modules/@uniswap/v4-core/",
      "ds-test/=node_modules/@uniswap/v4-core/lib/solmate/lib/ds-test/",
      "erc4626-tests/=node_modules/@uniswap/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/",
      "forge-gas-snapshot/=node_modules/@uniswap/v4-periphery/lib/permit2/lib/forge-gas-snapshot/",
      "forge-std/=node_modules/forge-std/src/",
      "hardhat/=node_modules/hardhat/",
      "openzeppelin-contracts/=node_modules/@uniswap/v4-core/lib/openzeppelin-contracts/",
      "permit2/=node_modules/@uniswap/v4-periphery/lib/permit2/",
      "solmate/=node_modules/@uniswap/v4-core/lib/solmate/",
      "v4-core/=node_modules/@uniswap/v4-periphery/lib/v4-core/",
      "v4-periphery/=node_modules/@uniswap/v4-periphery/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "compilationTarget": {
      "node_modules/@fhenixprotocol/cofhe-mock-contracts/MockTaskManager.sol": "TaskManager"
    },
    "evmVersion": "cancun",
    "libraries": {},
    "viaIR": true
  },
  "sources": {
    "node_modules/@fhenixprotocol/cofhe-contracts/FHE.sol": {
      "keccak256": "0x1ef83b66db01d3252557ae8b22553920966b864e9de79134039a80368eaae573",
      "urls": [
        "bzz-raw://5ceadf3ed2378689c9b806b87fa56ce2a8774ecf693678150bcd558fb71b5be7",
        "dweb:/ipfs/QmNeW41QYyYnCYephhamCkE1aem3HVTHxpao7JbA2ABTjs"
      ],
      "license": "BSD-3-Clause-Clear"
    },
    "node_modules/@fhenixprotocol/cofhe-contracts/ICofhe.sol": {
      "keccak256": "0x4f1bb532cd152e124638f5957ee43848d82a34df1c540c5dbf99ea72359e2db3",
      "urls": [
        "bzz-raw://260aa7d6c664aa4c5b7f6760de4de6c206a17a5fcde784c171459e9bd0850696",
        "dweb:/ipfs/QmQKqbPJvR4ced1SJGzCtgohEbzi7oRgHBqNDLLvxPVKvJ"
      ],
      "license": "UNLICENSED"
    },
    "node_modules/@fhenixprotocol/cofhe-mock-contracts/ACL.sol": {
      "keccak256": "0x02727fe4c3ce4b04f7d95e42f97da4476f49f5bf76986e8ab4b420ec5ab48729",
      "urls": [
        "bzz-raw://79763fdb12cd475881290d89968e606c7cb6fd40ca2e12b0afe9330cdf9f9794",
        "dweb:/ipfs/QmY8XLSQc1jyWNii81Tj34vdYcVpZjZU8Hqq5gBb2kqwzV"
      ],
      "license": "BSD-3-Clause-Clear"
    },
    "node_modules/@fhenixprotocol/cofhe-mock-contracts/MockCoFHE.sol": {
      "keccak256": "0x798e237e39d3b7022baf5278a0388b04701e4e25a77a9463766fd8e04e3cd79a",
      "urls": [
        "bzz-raw://12be0d737153cd88843e2a19ecde96898da77d0377c08a5a95eb96bbfdbe6163",
        "dweb:/ipfs/QmThgcGSYWd3AFkXs2WdBTVZ9b67J2ze3LieLGaHUUeDBH"
      ],
      "license": "BSD-3-Clause-Clear"
    },
    "node_modules/@fhenixprotocol/cofhe-mock-contracts/MockTaskManager.sol": {
      "keccak256": "0xe3e8a5c29c36b973406ea7086199997dc5f9f523c36cf654bdf3714f2b943ac8",
      "urls": [
        "bzz-raw://bb5da68be3a86c35d7435f34a6e3addf2b0f4644ab5fea747510ee961ff2740e",
        "dweb:/ipfs/QmXFKhDRsNKLFRC6wvuMx5B6DXrfqc5FoG8m6PVY4CTw1s"
      ],
      "license": "BSD-3-Clause-Clear"
    },
    "node_modules/@fhenixprotocol/cofhe-mock-contracts/Permissioned.sol": {
      "keccak256": "0x2a9dcdbe1373efc447b5a46b671a5b73becc8ae908e9a346f72142c2c73a5e2e",
      "urls": [
        "bzz-raw://8d711b39f2291a506e0bdbccb84479c5d8eccd0b121ff3219576bd263ec04641",
        "dweb:/ipfs/QmfJUnpLsahxdCV5pmGCBBp6CtGadwa8Jcvm75LrwQcP8s"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
      "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
      "urls": [
        "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
        "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/access/Ownable2Step.sol": {
      "keccak256": "0xdcad8898fda432696597752e8ec361b87d85c82cb258115427af006dacf7128c",
      "urls": [
        "bzz-raw://e2c9d517f0c136d54bd00cd57959d25681d4d6273f5bbbc263afe228303772f0",
        "dweb:/ipfs/QmReNFjXBiufByiAAzfSQ2SM5r3qeUErn46BmN3yVRvrek"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC1271.sol": {
      "keccak256": "0x66c7ec42c6c43712be2107a50ab4529379bc76a632b425babec698d9da921ac6",
      "urls": [
        "bzz-raw://dce2778f0b638adfc5ba29c2c618c855fe725fa74a16846386aa1d56a834aa04",
        "dweb:/ipfs/QmPV9oWnzQdi58od266j62xvviavLNHqKLZfm6k2K1qy9E"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC5267.sol": {
      "keccak256": "0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee",
      "urls": [
        "bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae",
        "dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC7913.sol": {
      "keccak256": "0xe5a126930df1d54e4a6dd5fea09010c4a7db0ea974c6c17a1e6082879f5a032b",
      "urls": [
        "bzz-raw://2f58f5a90328536a6c68289916bfa4ed653d871319c7b2a416ab3f6263c4f2f5",
        "dweb:/ipfs/Qmaa9DmgUA16Urz5fuF4RbFz2NaVpNLV41ddwykSdasFUd"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/Bytes.sol": {
      "keccak256": "0x1613f93e376ab96791fd29f79da754e253c3d766831bc8c42f50545662f49065",
      "urls": [
        "bzz-raw://e88ee314d50d0f323616f88d0ccf5e4110dbdec2775d8d42523bcc8b76ed36eb",
        "dweb:/ipfs/QmQ18ygHRrDdz4AEZXy5PASUHvJk1SNWWKM3TyC1xvDedP"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/Context.sol": {
      "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
      "urls": [
        "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
        "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/Panic.sol": {
      "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
      "urls": [
        "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
        "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol": {
      "keccak256": "0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402",
      "urls": [
        "bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35",
        "dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
      "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
      "urls": [
        "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
        "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
      "keccak256": "0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4",
      "urls": [
        "bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e",
        "dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
      "keccak256": "0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84",
      "urls": [
        "bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9",
        "dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
      "keccak256": "0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5",
      "urls": [
        "bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746",
        "dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
      "keccak256": "0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631",
      "urls": [
        "bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59",
        "dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol": {
      "keccak256": "0x0f39d23ae345355f0913470b15d00c0434754302077ac97cdc038b5c000fc5cc",
      "urls": [
        "bzz-raw://d5ebc3233ff506c43e0f9960d2459403f878bbb63b7c71c318f16839564919ac",
        "dweb:/ipfs/QmbctngFd6aQkHVqZeFAL3iHfw4X7wNgfsgUxX8t26U2m4"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
      "keccak256": "0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6",
      "urls": [
        "bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3",
        "dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
      "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
      "urls": [
        "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
        "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
      "keccak256": "0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3",
      "urls": [
        "bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03",
        "dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"
      ],
      "license": "MIT"
    },
    "node_modules/hardhat/console.sol": {
      "keccak256": "0xf2560b5386574153057104d19a9e68a32ee912cf23c0c8df1fe9a0607f42d543",
      "urls": [
        "bzz-raw://a63166e036b040826baa513772451a79925daa304b38749100efb089ac07cdc2",
        "dweb:/ipfs/QmUtMTxUFKU6a5oFXsEJnTPvb3QPb7GDDmSv5yZ1jFHDwR"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}